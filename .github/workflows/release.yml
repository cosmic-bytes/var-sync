name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(grep -o 'version.*=.*"[^"]*"' main.go | cut -d'"' -f2)
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Bump version
        id: version
        run: |
          CURRENT="${{ steps.current_version.outputs.current }}"
          IFS='.' read -ra PARTS <<< "$CURRENT"
          MAJOR=${PARTS[0]}
          MINOR=${PARTS[1]}
          PATCH=${PARTS[2]}
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update version in code
        run: |
          sed -i 's/version.*=.*"[^"]*"/version = "${{ steps.version.outputs.version }}"/' main.go

      - name: Build macOS binary
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version }}" -o var-sync-darwin-amd64 .
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.version.outputs.version }}" -o var-sync-darwin-arm64 .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          draft: false
          prerelease: false
          body: |
            ## Changes
            Auto-generated release from main branch.
            
            ## Download
            - macOS (Intel): var-sync-darwin-amd64
            - macOS (Apple Silicon): var-sync-darwin-arm64

      - name: Upload macOS Intel Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./var-sync-darwin-amd64
          asset_name: var-sync-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS ARM Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./var-sync-darwin-arm64
          asset_name: var-sync-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Commit version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add main.go
          git commit -m "Bump version to ${{ steps.version.outputs.version }}" || exit 0
          git tag ${{ steps.version.outputs.tag }}
          git push origin main
          git push origin ${{ steps.version.outputs.tag }}